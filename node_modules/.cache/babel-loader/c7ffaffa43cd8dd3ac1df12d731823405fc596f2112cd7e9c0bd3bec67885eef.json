{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEB DEVELOPMENT\\\\REACT ALL PROJECTS\\\\REACTJS 5\\\\myapp2\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // we can give an object as initial value in usestate\n  const [fullname, setfullname] = new useState({\n    fname: \"\",\n    lname: \"\"\n  });\n  //we can access those with eg. fullname.fname \n\n  function input(e) {\n    // value variable me jo bhi input diya hai wo value ayegi\n    const value = e.target.value;\n\n    // name attribute ki value access krne ke liye name variable\n    const name = e.target.name;\n\n    // previousvalue ek parameter hai setFullname() function ka kuch bhi hoskta hai waise like pv or prev. it gives the previous value stored in that attribute.\n    setfullname(previousvalue => {\n      if (name === \"fname\") {\n        // we should return the updated values \n        return {\n          fname: value,\n          // set the entered fname \n          lname: previousvalue.lname // keep as it is bcoz we have entered only fname now \n        };\n      } else {\n        return {\n          fname: previousvalue.fname,\n          // keep as it is coz we have entered in lname section \n          lname: value // update lname \n        };\n      }\n    });\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    alert(\"Form submitted !! \");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", \"Hello ! \", fullname.fname, \" \", fullname.lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your first name !\",\n        name: \"fname\",\n        onChange: input,\n        value: fullname.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your Lastname !\",\n        name: \"lname\",\n        onChange: input,\n        value: fullname.lname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","fullname","setfullname","fname","lname","input","e","value","target","name","previousvalue","onSubmit","preventDefault","alert"],"sources":["C:/WEB DEVELOPMENT/REACT ALL PROJECTS/REACTJS 5/myapp2/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n  // we can give an object as initial value in usestate\n  const [fullname, setfullname] = new useState(\n    {\n        fname:\"\",\n        lname:\"\"\n    }\n  );\n  //we can access those with eg. fullname.fname \n  \n  function input( e ) {\n    \n    // value variable me jo bhi input diya hai wo value ayegi\n    const value = e.target.value;\n\n    // name attribute ki value access krne ke liye name variable\n    const name = e.target.name;\n\n    // previousvalue ek parameter hai setFullname() function ka kuch bhi hoskta hai waise like pv or prev. it gives the previous value stored in that attribute.\n    setfullname( (previousvalue )=>{\n\n      if( name===\"fname\"){\n        // we should return the updated values \n        return{\n          fname:value , // set the entered fname \n          lname:previousvalue.lname // keep as it is bcoz we have entered only fname now \n        }\n      }\n      else{\n        return{\n          fname:previousvalue.fname , // keep as it is coz we have entered in lname section \n          lname:value // update lname \n        }\n      }\n    })\n\n  }\n  \n  function onSubmit(e) \n  { \n    e.preventDefault();\n    alert(\"Form submitted !! \")\n   \n  }\n  \n\n  return (\n    <div className=\"App\">\n      <form onSubmit={onSubmit}>\n        <h1>\n          {\" \"}\n          Hello ! {fullname.fname} {fullname.lname}\n        </h1>\n\n        {/* name attribute is added so that we can identify the inputs */}\n        <input\n          type=\"text\"\n          placeholder=\"Enter your first name !\"\n          name=\"fname\"\n          onChange={input}\n          value={fullname.fname}\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter your Lastname !\"\n          name=\"lname\"\n          onChange={input}\n          value={fullname.lname}  \n        />\n\n        <button onClick={onSubmit}>submit</button>\n      </form>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAEb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG,IAAIH,QAAQ,CAC1C;IACII,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC;EACV,CAAC,CACF;EACD;;EAEA,SAASC,KAAK,CAAEC,CAAC,EAAG;IAElB;IACA,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;;IAE5B;IACA,MAAME,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACC,IAAI;;IAE1B;IACAP,WAAW,CAAGQ,aAAa,IAAI;MAE7B,IAAID,IAAI,KAAG,OAAO,EAAC;QACjB;QACA,OAAM;UACJN,KAAK,EAACI,KAAK;UAAG;UACdH,KAAK,EAACM,aAAa,CAACN,KAAK,CAAC;QAC5B,CAAC;MACH,CAAC,MACG;QACF,OAAM;UACJD,KAAK,EAACO,aAAa,CAACP,KAAK;UAAG;UAC5BC,KAAK,EAACG,KAAK,CAAC;QACd,CAAC;MACH;IACF,CAAC,CAAC;EAEJ;;EAEA,SAASI,QAAQ,CAACL,CAAC,EACnB;IACEA,CAAC,CAACM,cAAc,EAAE;IAClBC,KAAK,CAAC,oBAAoB,CAAC;EAE7B;EAGA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAM,QAAQ,EAAEF,QAAS;MAAA,wBACvB;QAAA,WACG,GAAG,EAAC,UACG,EAACV,QAAQ,CAACE,KAAK,EAAC,GAAC,EAACF,QAAQ,CAACG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACrC,eAGL;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,yBAAyB;QACrC,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAEC,KAAM;QAChB,KAAK,EAAEJ,QAAQ,CAACE;MAAM;QAAA;QAAA;QAAA;MAAA,QACtB,eAEF;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,uBAAuB;QACnC,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAEE,KAAM;QAChB,KAAK,EAAEJ,QAAQ,CAACG;MAAM;QAAA;QAAA;QAAA;MAAA,QACtB,eAEF;QAAQ,OAAO,EAAEO,QAAS;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACrC;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,KA5EQX,GAAG;AA6EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}